{"name":"Twist","tagline":"Solving NP-Complete Problems via Boolean Satisfiability.","body":"#*Twist*\r\n\r\n##What is *Twist*?\r\n\r\n*Twist* is a tool for solving arbitrary NP-Complete problems. \r\n\r\nThese problems are written in a form of second-order logic. *Twist* first reduces these into instances of the Boolean Satisfiability problem, which can then be solved by SAT-solving software. *Twist* then converts this solution back to produce an answer to the original problem.\r\n\r\n##Documentation\r\n\r\nThe documentation available is included in the docs/ directory. This will consist of the original dissertation from which this project originated, and a user guide.\r\n\r\nExample problem and instance files can be found in src/problems/ and src/graphs/, respectively.\r\n\r\n##Installation\r\n\r\nBuild shell scripts for *Twist* and the test code are available in the src/ directory. \r\n\r\n##Usage\r\n\r\nOnce installed, *Twist* can be run as:\r\n\r\n    twist.byte|native [options] <problem file> <instance file>\r\n\r\nAvailable options can be listed by running:\r\n\r\n    twist.byte|native --help\r\n\r\n##SAT-solvers\r\n\r\n*Twist* has been tested with MiniSat for solving regular CNF instances, and MiniSat+ for solving pseudo-Boolean constraints. These are available, respectively, at:\r\n\r\n* http://minisat.se/MiniSat.html\r\n* http://minisat.se/MiniSat+.html\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}